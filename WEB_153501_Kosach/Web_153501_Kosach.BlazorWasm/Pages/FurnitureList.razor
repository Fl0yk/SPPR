@page "/catalog"
@page "/catalog/{category}"
@attribute [Authorize]


<PageTitle>Каталог</PageTitle>

@if (DataService.Success)
{
    <CategorySelector SelectedCategory="@SelectedName" />

    <ObjectsList ObjSelected="@FindFurniture"/>

    <Pager Category="@Category"/>

    <ObjectDetails Selectedobject="SelectedObject"/>
}

@code {
    [Inject]
    public IDataService DataService { get; set; }

    [Parameter] public string? Category { get; set; }

    public string SelectedName { get; set; }

    public Furniture SelectedObject { get; set; }

    public void FindFurniture(int id)
    {
        //await DataService.GetProductByIdAsync(id);
        SelectedObject = DataService.ObjectsList.First(d => d.Id == id);
    }

    // protected override async Task OnInitializedAsync()
    // {
    //     await DataService.GetCategoryListAsync();
    //     if(!DataService.Success)
    //     {
    //         Console.WriteLine(DataService.ErrorMessage);
    //     }
    //     // Task.WaitAll(new Task[]
    //     // {
    //     //     new Task(() => dataService.GetProductListAsync(Category)),
    //     //     new Task(() => dataService.GetCategoryListAsync()),
    //     // });
    // }

    protected override async Task OnParametersSetAsync()
    {
        await DataService.GetProductListAsync(Category);
        if (!DataService.Success)
        {
            Console.WriteLine(DataService.ErrorMessage);
        }

        await DataService.GetCategoryListAsync();
        if (!DataService.Success)
        {
            Console.WriteLine(DataService.ErrorMessage);
        }
        if (Category != null && DataService.Categories is not null)
        {
            SelectedName = DataService.Categories
                        .FirstOrDefault(c => c.NormalizedName.Equals(Category))?
                        .Name ?? "Все";
        }
        else
        {
            SelectedName = "Все";
        }

    }

}
